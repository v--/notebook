[project]
name = "notebook"
version = "1.0.0"
description = "Python code corresponding to my math notebook"
license = "Unlicense"
readme = "README.md"
requires-python = ">=3.14,<4.0"
authors = [
  {"name"= "Ianis Vasilev", "email"= "<ianis@ivasilev.net>"}
]

[project.urls]
Repository = "https://github.com/v--/notebook.git"

[dependency-groups]
commands = [
  "click (>=8.3.0)",
  "loguru (>=0.7.3)",
]

bibtools = [
  { include-group = "commands" },
  "iso639-lang (>=2.6.3)",
  "many-stop-words (>=0.2.2)",
  "nameparser (>=1.1.3)",
  "pydantic (>=2.12.3)",
  "python-stdnum (>=2.1)",
  "stop-words (>=2018.7.23)",
  "titlecase (>=2.4.1)",
  "xsdata (>=25.7)",
]

figures = [
  "numpy (>=2.3.4)",
  "pillow (>=12.0.0)",
]

watcher = [
  { include-group = "commands" },
  "asyncinotify (>=4.2.1)",
  "texoutparse @ git+https://github.com/v--/texoutparse.git",
  "xvfbwrapper (>=0.2.15)",
]

dev = [
  "beautifulsoup4 (>=4.14.2)",
  "coverage (>=7.11.0)",
  "mypy (>=1.18.2)",
  "pytest (>=8.4.2)",
  "pytest-benchmark (>=5.1.0)",
  "pytest-loguru (>=0.4.0)",
  "pytest-profiling (>=1.8.1)",
  "pytest-xdist (>=3.8.0)",
  "ruff (>=0.14.2)",
  "types-beautifulsoup4 (>=4.12.0.20250516)",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# poe
[tool.poe]
include = "./poe.toml"

[tool.poe.tasks.watcher]
cmd = "python -m notebook.commands.watcher"

[tool.poe.tasks.format-matrices]
cmd = "python -m notebook.commands.format_matrices"

[tool.poe.tasks.bibtools]
cmd = "python -m notebook.commands.bibtools"

[tool.poe.tasks.find-obsolete-figures]
cmd = "python -m notebook.commands.find_obsolete_figures"

[tool.poe.tasks.checkcites]
cmd = "checkcites --backend biber --all aux/notebook.bcf"

[tool.poe.tasks.benchmark]
cmd = "pytest --config-file pytest_benchmark.ini"

# pytest
[tool.pytest.ini_options]
addopts = "--capture tee-sys"

# ruff
[tool.ruff]
extend = "./ruff.toml"

# mypy
[tool.mypy]
packages = ["notebook"]

[[tool.mypy.overrides]]
module = [
  "asyncinotify.*",
  "iso639.*",
  "loguru.*",
  "many_stop_words.*",
  "nameparser.*",
  "pytest_benchmark.*",
  "pytest_loguru.*",
  "stdnum.*",
  "stop_words.*",
  "texoutparse.*",
  "titlecase.*",
  "xvfbwrapper.*",
]
ignore_missing_imports = true
