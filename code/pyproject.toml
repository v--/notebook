# poetry
[tool.poetry]
name = "notebook"
version = "1.0.0"
description = "Python code corresponding to my math notebook"
authors = ["Ianis Vasilev <ianis@ivasilev.net>"]
license = "Unlicense"
packages = [
  { include = "notebook" },
  { include = "commands" }
]

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.1"
pytest = "^8.1.1"
pytest-xdist = "^3.5.0"
ruff = "^0.6.1"
coverage = "^7.4.4"

[tool.poetry.group.commands.dependencies]
texoutparse = { git = "https://github.com/v--/texoutparse.git" }
asyncinotify = "^4.0.6"
click = "^8.1.7"
iso639-lang = "^2.3.0"
loguru = "^0.7.2"
many-stop-words = "^0.2.2"
nameparser = "^1.1.3"
pydantic = "^2.9.1"
python-stdnum = "^1.20"
stop-words = "^2018.7.23"
xsdata = "^24.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# poe
[tool.poe]
include = "./poe.toml"

[tool.poe.tasks.watcher]
cmd = "python -m commands.watcher"
cwd = ".."

[tool.poe.tasks.format-matrices]
cmd = "python -m commands.format_matrices"
cwd = ".."

[tool.poe.tasks.bibtools]
cmd = "python -m commands.bibtools"
cwd = ".."

[tool.poe.tasks.find-obsolete-figures]
cmd = "python -m commands.find_obsolete_figures"
cwd = ".."

[tool.poe.tasks.checkcites]
shell = "cd ..; checkcites --backend biber --all aux/notebook.bcf"

# pytest
[tool.pytest.ini_options]
addopts = "--capture tee-sys"
testpaths = "notebook commands"
python_classes = "!Test"

# ruff
[tool.ruff]
extend = "./ruff.toml"

# mypy
[tool.mypy]
packages = ["notebook", "commands"]
enable_incomplete_feature = "NewGenericSyntax"

[[tool.mypy.overrides]]
module = [
  "iso639.*",
  "many_stop_words.*",
  "nameparser.*",
  "stdnum.*",
  "stop_words.*",
  "texoutparse.*"
]
ignore_missing_imports = true
